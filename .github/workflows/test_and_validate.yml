# Test changes that have been pushed to the master and dev branches

name: Testing and Validation

# Controls when the action will run.
on:
  push:
    branches: [ master, dev, notreal ]
  pull_request:
    branches: [ master, dev, notreal ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test_unit_ubuntu_latest:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    # TODO: make sure this step is still necessary
    - name: git submodule
      run: git submodule update --init --recursive -- test/googletest

    - name: cmake_init_build
      run: cmake -B cmake_build -S .
    
    - name: build_tests
      run: cmake --build cmake_build --target test_unit
      timeout-minutes: 15
      
    - name: run_tests
      run: ./cmake_build/test/test_unit
      timeout-minutes: 15
    
    - name: clean_build
      run: cmake --build cmake_build --target clean
    
    - name: cleanup_dir
      run: rm -rf cmake_build

  test_unit_macos_latest:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: git submodule
        run: git submodule update --init --recursive -- test/googletest

      - name: Cache Boost Dependency
        id: cache-boost-dep
        uses: actions/cache@v1
        with:
          path: boost_1_72_0
          key: unix-boost-dep

      - name: Get Boost Dependency
        if: steps.cache-boost-dep.outputs.cache-hit != 'true'
        run: |
          curl -L -O https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.tar.bz2
          tar xjf boost_1_72_0.tar.bz2

      - name: cmake_init_build
        run: |
          export BOOST_ROOT="$(pwd)/boost_1_72_0"
          [ ! -d "$BOOST_ROOT" ] && echo "Error: no Boost root found at $BOOST_ROOT" && exit 1
          cmake -B cmake_build -S .

      - name: build_tests
        run: cmake --build cmake_build --target test_unit
        timeout-minutes: 15

      - name: run_tests
        run: ./cmake_build/test/test_unit
        timeout-minutes: 15

      - name: clean_build
        run: cmake --build cmake_build --target clean

      - name: cleanup_dir
        run: rm -rf cmake_build

  # TODO: fails due to compilation error, at least in large part due to use of POSIX functions not supported on Windows.
  # TODO: Need to determine whether Windows support (in particular, development environment support) is necessary.
#  test_unit_windows_latest:
#    # The type of runner that the job will run on
#    runs-on: windows-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      - name: git submodule
#        run: git submodule update --init --recursive -- test/googletest
#
#      - name: cmake_init_build
#        run: cmake -B cmake_build -S .
#
#      - name: build_tests
#        run: cmake --build cmake_build --target test_unit
#        timeout-minutes: 15
#
#      - name: run_tests
#        run: ./cmake_build/test/test_unit
#        timeout-minutes: 15
#
#      - name: clean_build
#        run: cmake --build cmake_build --target clean
#
#      - name: cleanup_dir
#        run: rm -rf cmake_build
